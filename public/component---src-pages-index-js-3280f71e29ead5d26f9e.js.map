{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/image.js"],"names":["IndexPage","title","style","marginBottom","textDecoration","to","href","Image","data","fluid","placeholderImage","childImageSharp"],"mappings":"2FAAA,gFAkFeA,UA5EG,WAChB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,iCACE,kBAAC,IAAD,MACA,sEACA,+EACA,yBACEC,MAAO,CACLC,aAAc,QAGhB,6BACE,kBAAC,IAAD,CAAMD,MAAO,CAAEE,eAAgB,QAAUC,GAAG,gBAC1C,6CAGJ,6BACE,kBAAC,IAAD,CAAMH,MAAO,CAAEE,eAAgB,QAAUC,GAAG,SAC1C,wCAKR,iCACE,6BACE,2CACA,iDACA,4NAKA,0FACA,0EAC+C,IAC7C,uBAAGH,MAAO,CAAEE,eAAgB,QAAUE,KAAK,wBAA3C,kBAGC,KALH,kDAQA,uEACA,2PAMA,2BACE,wCADF,iBAGA,2BACE,0CADF,iBAGA,2BACE,wCADF,iBAGA,wDACA,2MAKA,4CACA,yK,4FCzCKC,IAhBD,WACZ,IAAMC,EAAI,OAYV,OAAO,kBAAC,IAAD,CAAKC,MAAOD,EAAKE,iBAAiBC,gBAAgBF,U","file":"component---src-pages-index-js-3280f71e29ead5d26f9e.js","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\";\nimport Image from \"../components/image\";\nimport SEO from \"../components/seo\";\nimport { Link } from \"gatsby\";\n\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <section>\n        <Image></Image>\n        <h1>Are you ready to fulfill your destiny?</h1>\n        <h4>Become the greatest trivia fighter of all time!</h4>\n        <div\n          style={{\n            marginBottom: \"1vh\",\n          }}\n        >\n          <div>\n            <Link style={{ textDecoration: \"none\" }} to=\"/leaderboard\">\n              <h3>Leaderboard</h3>\n            </Link>\n          </div>\n          <div>\n            <Link style={{ textDecoration: \"none\" }} to=\"/play\">\n              <h3>Play</h3>\n            </Link>\n          </div>\n        </div>\n      </section>\n      <section>\n        <div>\n          <h1>How to Play</h1>\n          <h4>Stay in the fight</h4>\n          <p>\n            Trivia Fighter Turbo presents you arcade style trivia in a web\n            browser! Compete in upto 20 rounds of multiple choice questions to\n            get the highest score and put your name on the leaderboard.\n          </p>\n          <p> Game is over if you guess wrong or if you run out of time.</p>\n          <p>\n            Trivia Fighter Turbo gets its questions from{\" \"}\n            <a style={{ textDecoration: \"none\" }} href=\"https://opentdb.com/\">\n              Open Trivia DB\n            </a>\n            {\". \"}\n            Be prepared for questions from +20 categories!\n          </p>\n          <h4>Stronger the opponent, bigger the prize</h4>\n          <p>\n            Questions come at random difficulty levels, at every new round.\n            Fortune might favor you with a flurry of easy questions or one\n            difficult opponent might be your end. On the bright side, harder\n            questions yield more points!\n          </p>\n          <p>\n            <strong>Easy</strong> = 100 Points\n          </p>\n          <p>\n            <strong>Medium</strong> = 200 Points\n          </p>\n          <p>\n            <strong>Hard</strong> = 500 Points\n          </p>\n          <h4>Keep an eye out for time</h4>\n          <p>\n            Every round 10 more seconds are added to your timer. If the timer\n            runs out before you can answer a question, game is over. Use the\n            time wisely if you want to reach the top!\n          </p>\n          <h4>Make History</h4>\n          <p>\n            Beat other fighters' scores to put your name on the map. Check the\n            leaderboard frequently to see if you still qualify for the top 10.\n          </p>\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"ryu.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return <Img fluid={data.placeholderImage.childImageSharp.fluid} />;\n};\n\nexport default Image;\n"],"sourceRoot":""}